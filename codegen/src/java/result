make -C cool/
make[1]: Entering directory '/home/harsh/btech/5sem/Compiler2/CS3423-Compilers/codegen/src/java/cool'
javac -cp /usr/local/lib/antlr-4.5.3-complete.jar -Xlint *.java
ClassScope_temp.java:5: error: duplicate class: cool.ClassScope
class ClassScope {
^
Codegen.java:21: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  OpType last_instruction;
  ^
Codegen.java:28: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  Tracker(int reg , int cnt, OpType op) {
                             ^
Codegen.java:43: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  OpType string_type = get_optype("String", true, 0);
  ^
Codegen.java:44: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  OpType int_type = get_optype("Int", true, 0);
  ^
Codegen.java:45: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  OpType bool_type = get_optype("Bool", true, 0);
  ^
Codegen.java:46: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  OpType void_type = new OpType(OpTypeId.VOID);
  ^
Codegen.java:50: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  OpType method_return_type;
  ^
Codegen.java:247: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  public OpType get_optype(String typeid, boolean isClass, int depth) {
         ^
Codegen.java:357: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  public void allocate_function_parameters(PrintWriter out, List<Operand> arguments) {
                                                                 ^
Codegen.java:654: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  public void attempt_assign_retval(PrintWriter out, OpType op, int register) {
                                                     ^
Printer.java:23: warning: auxiliary class ConstValue in dataType.java should not be accessed from outside its own source file
  void initConstant(PrintWriter out, String name, ConstValue op) {
                                                  ^
Printer.java:35: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  void define(PrintWriter out, OpType retType, String name, List<Operand> args) {
                               ^
Printer.java:35: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void define(PrintWriter out, OpType retType, String name, List<Operand> args) {
                                                                 ^
Printer.java:47: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  void declare(PrintWriter out, OpType retType, String name, List<OpType> args) {
                                ^
Printer.java:47: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  void declare(PrintWriter out, OpType retType, String name, List<OpType> args) {
                                                                  ^
Printer.java:59: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  void typeDefine(PrintWriter out, String className, List<OpType> attributes) {
                                                          ^
Printer.java:71: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  void typeAliasDefine(PrintWriter out, String aliasName, OpType type) {
                                                          ^
Printer.java:75: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void initStructConstant(PrintWriter out, Operand constant, List<OpType> fieldTypes, List<ConstValue> InitVals) {
                                           ^
Printer.java:75: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  void initStructConstant(PrintWriter out, Operand constant, List<OpType> fieldTypes, List<ConstValue> InitVals) {
                                                                  ^
Printer.java:75: warning: auxiliary class ConstValue in dataType.java should not be accessed from outside its own source file
  void initStructConstant(PrintWriter out, Operand constant, List<OpType> fieldTypes, List<ConstValue> InitVals) {
                                                                                           ^
Printer.java:93: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void arithOp(PrintWriter out, String operation, Operand op1, Operand op2, Operand result) {
                                                  ^
Printer.java:93: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void arithOp(PrintWriter out, String operation, Operand op1, Operand op2, Operand result) {
                                                               ^
Printer.java:93: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void arithOp(PrintWriter out, String operation, Operand op1, Operand op2, Operand result) {
                                                                            ^
Printer.java:101: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void mallocOp(PrintWriter out, Operand size, Operand result) {
                                 ^
Printer.java:101: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void mallocOp(PrintWriter out, Operand size, Operand result) {
                                               ^
Printer.java:105: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  void allocaOp(PrintWriter out, OpType type, Operand result) {
                                 ^
Printer.java:105: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void allocaOp(PrintWriter out, OpType type, Operand result) {
                                              ^
Printer.java:109: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  void loadOp(PrintWriter out, OpType type, Operand op, Operand result) {
                               ^
Printer.java:109: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void loadOp(PrintWriter out, OpType type, Operand op, Operand result) {
                                            ^
Printer.java:109: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void loadOp(PrintWriter out, OpType type, Operand op, Operand result) {
                                                        ^
Printer.java:114: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void storeOp(PrintWriter out, Operand op, Operand result) {
                                ^
Printer.java:114: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void storeOp(PrintWriter out, Operand op, Operand result) {
                                            ^
Printer.java:119: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  void getElementPtr(PrintWriter out, OpType type, List<Operand> operandList, Operand result, boolean inbounds) {
                                      ^
Printer.java:119: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void getElementPtr(PrintWriter out, OpType type, List<Operand> operandList, Operand result, boolean inbounds) {
                                                        ^
Printer.java:119: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void getElementPtr(PrintWriter out, OpType type, List<Operand> operandList, Operand result, boolean inbounds) {
                                                                              ^
Printer.java:138: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  void getElementPtrEmbed(PrintWriter out, OpType type, Operand op1, Operand op2, Operand op3, boolean inbounds) {
                                           ^
Printer.java:138: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void getElementPtrEmbed(PrintWriter out, OpType type, Operand op1, Operand op2, Operand op3, boolean inbounds) {
                                                        ^
Printer.java:138: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void getElementPtrEmbed(PrintWriter out, OpType type, Operand op1, Operand op2, Operand op3, boolean inbounds) {
                                                                     ^
Printer.java:138: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void getElementPtrEmbed(PrintWriter out, OpType type, Operand op1, Operand op2, Operand op3, boolean inbounds) {
                                                                                  ^
Printer.java:147: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void selectOp(PrintWriter out, Operand op1, Operand op2, Operand op3, Operand result) {
                                 ^
Printer.java:147: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void selectOp(PrintWriter out, Operand op1, Operand op2, Operand op3, Operand result) {
                                              ^
Printer.java:147: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void selectOp(PrintWriter out, Operand op1, Operand op2, Operand op3, Operand result) {
                                                           ^
Printer.java:147: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void selectOp(PrintWriter out, Operand op1, Operand op2, Operand op3, Operand result) {
                                                                        ^
Printer.java:152: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void branchCondOp(PrintWriter out, Operand op, String labelTrue, String labelFalse) {
                                     ^
Printer.java:161: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void compareOp(PrintWriter out, String cond, Operand op1, Operand op2, Operand result) {
                                               ^
Printer.java:161: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void compareOp(PrintWriter out, String cond, Operand op1, Operand op2, Operand result) {
                                                            ^
Printer.java:161: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void compareOp(PrintWriter out, String cond, Operand op1, Operand op2, Operand result) {
                                                                         ^
Printer.java:173: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  void callOp(PrintWriter out, List<OpType> argTypes, String funcName, boolean isGlobal, List<Operand> args, Operand resultOp) {
                                    ^
Printer.java:173: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void callOp(PrintWriter out, List<OpType> argTypes, String funcName, boolean isGlobal, List<Operand> args, Operand resultOp) {
                                                                                              ^
Printer.java:173: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void callOp(PrintWriter out, List<OpType> argTypes, String funcName, boolean isGlobal, List<Operand> args, Operand resultOp) {
                                                                                                             ^
Printer.java:205: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void retOp(PrintWriter out, Operand op) {
                              ^
Printer.java:215: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void bitcastOp(PrintWriter out, Operand op, OpType newType, Operand result) {
                                  ^
Printer.java:215: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  void bitcastOp(PrintWriter out, Operand op, OpType newType, Operand result) {
                                              ^
Printer.java:215: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
  void bitcastOp(PrintWriter out, Operand op, OpType newType, Operand result) {
                                                              ^
Codegen.java:25: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
    last_instruction = new OpType();
                           ^
Codegen.java:46: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
  OpType void_type = new OpType(OpTypeId.VOID);
                         ^
Codegen.java:46: warning: auxiliary class OpTypeId in dataType.java should not be accessed from outside its own source file
  OpType void_type = new OpType(OpTypeId.VOID);
                                ^
Codegen.java:62: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
    List<OpType> params;
         ^
Codegen.java:65: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
    params = new ArrayList<OpType>();
                           ^
Codegen.java:81: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
    params = new ArrayList<OpType>();
                           ^
Codegen.java:86: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
    params = new ArrayList<OpType>();
                           ^
Codegen.java:88: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
    params.add(new OpType(OpTypeId.VAR_ARG));
                   ^
Codegen.java:88: warning: auxiliary class OpTypeId in dataType.java should not be accessed from outside its own source file
    params.add(new OpType(OpTypeId.VAR_ARG));
                          ^
Codegen.java:93: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
    params = new ArrayList<OpType>();
                           ^
Codegen.java:96: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
    print_util.declare(out, new OpType(OpTypeId.VOID), "exit", params);
                                ^
Codegen.java:96: warning: auxiliary class OpTypeId in dataType.java should not be accessed from outside its own source file
    print_util.declare(out, new OpType(OpTypeId.VOID), "exit", params);
                                       ^
Codegen.java:110: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
        print_util.define(out, int_type, "main", new ArrayList<Operand>());
                                                               ^
Codegen.java:111: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
        print_util.allocaOp(out, get_optype("Main", true, 0), new Operand(get_optype("Main", true, 1), "obj"));
                                                                  ^
Codegen.java:112: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
        List<Operand> op_list = new ArrayList<Operand>();
             ^
Codegen.java:112: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
        List<Operand> op_list = new ArrayList<Operand>();
                                              ^
Codegen.java:113: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
        op_list.add(new Operand(get_optype("Main", true, 1), "obj"));
                        ^
Codegen.java:114: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
        print_util.callOp(out, new ArrayList<OpType>(), "Main_Cons_Main", true, op_list, new Operand(void_type, "null"));
                                             ^
Codegen.java:114: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
        print_util.callOp(out, new ArrayList<OpType>(), "Main_Cons_Main", true, op_list, new Operand(void_type, "null"));
                                                                                             ^
Codegen.java:115: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
        print_util.retOp(out, (Operand)new IntValue(0));
                               ^
Codegen.java:115: warning: auxiliary class IntValue in dataType.java should not be accessed from outside its own source file
        print_util.retOp(out, (Operand)new IntValue(0));
                                           ^
Codegen.java:144: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
      List<OpType> attribute_types = new ArrayList<OpType>();
           ^
Codegen.java:144: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
      List<OpType> attribute_types = new ArrayList<OpType>();
                                                   ^
Codegen.java:175: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
        List<Operand> arguments = new ArrayList<Operand>();
             ^
Codegen.java:175: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
        List<Operand> arguments = new ArrayList<Operand>();
                                                ^
Codegen.java:176: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
        arguments.add(new Operand(get_optype(cl.name, true, 1), "this"));
                          ^
Codegen.java:178: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
          Operand cur_arg = new Operand(get_optype(f.typeid, true, 0), f.name);
          ^
Codegen.java:178: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
          Operand cur_arg = new Operand(get_optype(f.typeid, true, 0), f.name);
                                ^
Codegen.java:182: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
        OpType mtd_type;
        ^
Codegen.java:184: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
          mtd_type = new OpType(OpTypeId.VOID);
                         ^
Codegen.java:184: warning: auxiliary class OpTypeId in dataType.java should not be accessed from outside its own source file
          mtd_type = new OpType(OpTypeId.VOID);
                                ^
Codegen.java:193: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
          Operand retval = new Operand(get_optype(mtd.typeid, true, 0), "retval");
          ^
Codegen.java:193: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
          Operand retval = new Operand(get_optype(mtd.typeid, true, 0), "retval");
                               ^
Codegen.java:211: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
          print_util.retOp(out, new Operand(new OpType(OpTypeId.VOID), "null"));
                                    ^
Codegen.java:211: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
          print_util.retOp(out, new Operand(new OpType(OpTypeId.VOID), "null"));
                                                ^
Codegen.java:211: warning: auxiliary class OpTypeId in dataType.java should not be accessed from outside its own source file
          print_util.retOp(out, new Operand(new OpType(OpTypeId.VOID), "null"));
                                                       ^
Codegen.java:213: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
          print_util.loadOp(out, method_return_type, new Operand(method_return_type.getPtrType(), "retval"), new Operand(method_return_type, String.valueOf(counter.register)));
                                                         ^
Codegen.java:213: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
          print_util.loadOp(out, method_return_type, new Operand(method_return_type.getPtrType(), "retval"), new Operand(method_return_type, String.valueOf(counter.register)));
                                                                                                                 ^
Codegen.java:214: warning: auxiliary class Operand in dataType.java should not be accessed from outside its own source file
          print_util.retOp(out, new Operand(method_return_type, String.valueOf(counter.register)));
                                    ^
Codegen.java:249: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
      return new OpType(OpTypeId.INT8_PTR);
                 ^
Codegen.java:249: warning: auxiliary class OpTypeId in dataType.java should not be accessed from outside its own source file
      return new OpType(OpTypeId.INT8_PTR);
                        ^
Codegen.java:251: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
      return new OpType(OpTypeId.INT32);
                 ^
Codegen.java:251: warning: auxiliary class OpTypeId in dataType.java should not be accessed from outside its own source file
      return new OpType(OpTypeId.INT32);
                        ^
Codegen.java:253: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
      return new OpType(OpTypeId.INT1);
                 ^
Codegen.java:253: warning: auxiliary class OpTypeId in dataType.java should not be accessed from outside its own source file
      return new OpType(OpTypeId.INT1);
                        ^
Codegen.java:255: warning: auxiliary class OpType in dataType.java should not be accessed from outside its own source file
      return new OpType("class." + typeid, depth);
                 ^
1 error
100 warnings
Makefile:6: recipe for target 'all' failed
make[1]: *** [all] Error 1
make[1]: Leaving directory '/home/harsh/btech/5sem/Compiler2/CS3423-Compilers/codegen/src/java/cool'
Makefile:2: recipe for target 'all' failed
make: *** [all] Error 2
